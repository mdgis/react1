{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","poodle","id","name","email","Cardlist","poodles","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredPoodles","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BAEL,6BAAKL,EAAMI,OAAOE,OAClB,6BAAKN,EAAMI,OAAOG,YCNTC,EAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,QAAQC,KAAI,SAACN,GAAD,OACjB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCJXM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCCG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,QAAS,GACTS,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEf,QAASc,S,oBAG9C,WAAU,IAAD,SAC0BE,KAAKR,MAA9BR,EADD,EACCA,QAASS,EADV,EACUA,YACXQ,EAAkBjB,EAAQkB,QAAO,SAACvB,GAAD,OACrCA,EAAOE,KAAKsB,cAAcC,SAASX,EAAYY,wBAGjD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAc,SAACkB,GAAD,OAAO,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUxB,QAASiB,W,GA7BTQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac24ff26.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      alt=\"poodle\"\n      src={`https://robohash.org/${props.poodle.id}?set=set3&size=180x180`}\n    ></img>\n    <h2>{props.poodle.name}</h2>\n    <h3>{props.poodle.email}</h3>\n  </div>\n);\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const Cardlist = (props) => (\n  <div className=\"card-list\">\n    {props.poodles.map((poodle) => (\n      <Card key={poodle.id} poodle={poodle} />\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Cardlist } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box-component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      poodles: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ poodles: users }));\n  }\n\n  render() {\n    const { poodles, searchField } = this.state;\n    const filteredPoodles = poodles.filter((poodle) =>\n      poodle.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Poodles Rolodex</h1>\n        <SearchBox\n          placeholder=\"search poodles\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <Cardlist poodles={filteredPoodles} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}